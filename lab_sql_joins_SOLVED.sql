USE sakila;

-- List the number of films per category.

SELECT c.name AS category_name, COUNT(fc.film_id) AS films_per_category
FROM category as c
JOIN film_category as fc ON c.category_id = fc.category_id
GROUP BY c.name
ORDER BY films_per_category DESC;

-- Retrieve the store ID, city, and country for each store.

SELECT s.store_id, c.city, co.country
FROM store AS s
JOIN address AS a ON s.address_id = a.address_id
JOIN city AS c ON a.city_id = c.city_id
JOIN country AS co ON c.country_id = co.country_id;

-- Calculate the total revenue generated by each store in dollars.

SELECT c.store_id, SUM(p.amount) AS revenue
FROM customer AS c
JOIN payment AS p ON c.customer_id = p.customer_id
GROUP BY c.store_id;

-- Determine the average running time of films for each category.

SELECT c.name AS category_name, AVG(f.length) AS average_running_time
FROM category AS c
JOIN film_category AS fc ON c.category_id = fc.category_id
JOIN film AS f ON fc.film_id = f.film_id
GROUP BY category_name
ORDER BY average_running_time DESC;

-- Identify the film categories with the longest average running time.

SELECT c.name AS category_name, AVG(f.length) AS average_running_time
FROM category AS c
JOIN film_category AS fc ON c.category_id = fc.category_id
JOIN film AS f ON fc.film_id = f.film_id
GROUP BY category_name
ORDER BY average_running_time DESC
LIMIT 1;

